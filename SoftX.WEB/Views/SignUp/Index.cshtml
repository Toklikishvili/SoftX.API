@using SoftX.WEB.Models.Enumeration;
@model SignUpViewModel;
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SignUp</title>
    <link href="~/css/style.default.css" rel="stylesheet" />
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="~/js/site.js"></script>
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <script src="https://kit.fontawesome.com/d5c8a6985e.js" crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
</head>
<body>
    <div class="page-holder d-flex align-items-center">
        <div class="container">
            <div class="row align-items-center py-5">
                <div class="col-5 col-lg-7 mx-auto mb-5 mb-lg-0">
                    <div class="pr-lg-5">
                        <img src="@Url.Content("~/img/illustrationGif.gif")" alt="" class="img-fluid" />
                    </div>
                </div>
                <div class="col-lg-5 px-lg-4">
                    <h1 class="text-base text-primary text-uppercase mb-4">Sign up Here</h1>
                    <h2 class="mb-4">Welcome Back!</h2>
                    @using (Html.BeginForm("SignUp", "SignUp", FormMethod.Post))
                    {
                        <div class="form-group mb-4">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control border-0 shadow form-control-lg text-base", placeholder = "First Name", required = "true" })
                        </div>
                        <div class="form-group mb-4">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control border-0 shadow form-control-lg text-base", placeholder = "Last Name", required = "true" })
                        </div>
                        <div class="form-group mb-4">
                            @Html.TextBoxFor(m => m.PersonalNumber, new { @class = "form-control border-0 shadow form-control-lg text-base", placeholder = "PersonalNumber", required = "false" })
                        </div>
                        <div class="form-group mb-4">
                            @Html.DropDownListFor(m => m.Gender, Enum.GetValues(typeof(Gender)).Cast<Gender>().Select(g => new SelectListItem
                            {
                                Text = g.ToString(),
                                Value = ((int)g).ToString()
                            }), new { @class = "form-control border-0 shadow form-control-lg text-base", placeholder = "Gender", required = "true" })
                        </div>
                        <div class="form-group mb-4">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control border-0 shadow form-control-lg text-base", type = "email", placeholder = "Email", required = "true" })
                        </div>
                        <div class="form-group mb-4">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control border-0 shadow form-control-lg text-base", placeholder = "Password", required = "true" })
                        </div>
                        <div class="form-group mb-4">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control border-0 shadow form-control-lg text-base", placeholder = "Confirm Password", required = "true" })
                            <i id="toggle_pwd" class="fa fa-fw fa-eye float-right " style="margin-top:-30px; margin-right:6px; cursor:pointer"></i>
                        </div>
                        <button type="submit" class="btn btn-primary" style="height:50px;width:430px;">Sign up</button>
                        <p class="mb-8">Do you have an account? <a href="/Login">LogIn</a></p>
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>
